openapi: 3.1.0
info:
  version: '1.0'
  title: mawinter-api
  description: ''
servers:
  - url: 'http://localhost:8080'
paths:
  /:
    get:
      summary: health check
      description: |-
        health check
        always return 'It is the root page'
      operationId: get
      responses: {}
      servers:
        - url: 'http://localhost:8080'
  /version:
    get:
      summary: get version
      operationId: get-version
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                version:
                  type: string
                revision:
                  type: string
                build:
                  type: string
      responses: {}
      servers:
        - url: 'http://localhost:8080'
  /v2/record:
    post:
      summary: create record
      description: レコードを1つ追加する
      operationId: post-v2-record
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/req_record'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/record'
            application/xml:
              schema:
                $ref: '#/components/schemas/record'
      servers:
        - url: 'http://localhost:8080'
    get:
      summary: get records
      description: |-
        idの降順にRecordを取得する。
        デフォルトでは20件取得する。
      operationId: get-v2-record
      parameters:
        - name: num
          in: query
          description: the number of records
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          schema:
            type: integer
        - name: yyyymm
          in: query
          schema:
            type: string
        - name: category_id
          in: query
          schema:
            type: integer
      requestBody:
        content: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/record'
      servers:
        - url: 'http://localhost:8080'
  /v2/record/count:
    get:
      summary: record count
      description: 保存されているレコードの全件数を表示する。
      operationId: get-v2-record-count
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/record_count'
              examples:
                Example 1:
                  value:
                    num: 1234
      servers:
        - url: 'http://localhost:8080'
  /v2/record/fixmonth:
    post:
      summary: create fixmonth record
      description: DBに登録している固定費テーブルの内容を、Record に追加する
      operationId: post-v2-record-fixmonth
      parameters:
        - name: yyyymm
          in: query
          schema:
            type: integer
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/record'
        '204':
          description: No Content
      deprecated: true
      servers:
        - url: 'http://localhost:8080'
  '/v2/record/{yyyymm}/confirm':
    put:
      summary: update record confirm
      operationId: put-v2-table-yyyymm-confirm
      parameters:
        - name: yyyymm
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/confirm_info'
            application/xml:
              schema:
                type: object
        '404':
          description: Not Found
      deprecated: true
      servers:
        - url: 'http://localhost:8080'
    get:
      summary: get records confirm
      operationId: get-v2-record-yyyymm-confirm
      parameters:
        - name: yyyymm
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/confirm_info'
        '404':
          description: Not Found
      deprecated: true
      servers:
        - url: 'http://localhost:8080'
  '/v2/record/summary/{year}':
    get:
      summary: get year summary
      description: year 年度のサマリーを表示する
      operationId: get-v2-record-year
      parameters:
        - name: year
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/category_year_summary'
        '404':
          description: Not Found
      servers:
        - url: 'http://localhost:8080'
  /categories:
    get:
      summary: get categories
      operationId: get-categories
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/category'
      servers:
        - url: 'http://localhost:8080'
  '/v2/record/{id}':
    delete:
      summary: delete record from id
      operationId: delete-v2-record-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content
      servers:
        - url: 'http://localhost:8080'
    get:
      summary: get record from id
      operationId: get-v2-record-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/record'
      servers:
        - url: 'http://localhost:8080'
components:
  schemas:
    req_record:
      type: object
      title: req_record
      properties:
        category_id:
          type: integer
        price:
          type: integer
        datetime:
          type: string
          pattern: '[0-9]'
          examples:
            - '20060102'
        from:
          type: string
        type:
          type: string
        memo:
          type: string
      required:
        - category_id
        - price
      examples:
        - category_id: 120
          datetime: '20230101'
          from: discord
          type: ''
          price: 210
          memo: ''
    record:
      type: object
      title: record
      properties:
        id:
          type: integer
        category_id:
          type: integer
        category_name:
          type: string
        datetime:
          type: string
          format: date-time
        from:
          type: string
        type:
          type: string
        price:
          type: integer
        memo:
          type: string
      required:
        - id
        - category_id
        - category_name
        - datetime
        - from
        - type
        - price
        - memo
      examples: []
    record_count:
      type: object
      title: record_count
      properties:
        num:
          type: integer
    confirm_info:
      type: object
      title: confirm_info
      properties:
        yyyymm:
          type: string
        confirm_datetime:
          type: string
          format: date-time
        status:
          type: boolean
    category_year_summary:
      type: object
      title: category_year_summary
      properties:
        category_id:
          type: integer
        category_name:
          type: string
        count:
          type: integer
        price:
          type: array
          minItems: 12
          maxItems: 12
          items:
            type: integer
            default: 0
            examples:
              - 300
        total:
          type: integer
      required:
        - category_id
        - category_name
        - count
        - price
        - total
      examples:
        - category_id: 0
          category_name: string
          count: 0
          price:
            - 300
            - 300
            - 300
            - 300
            - 300
            - 300
            - 300
            - 300
            - 300
            - 300
            - 300
            - 300
          total: 0
    category:
      type: object
      title: category
      properties:
        category_id:
          type: integer
        category_name:
          type: string
      required:
        - category_id
        - category_name
