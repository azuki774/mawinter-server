// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.15.0 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"wF8cAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
