// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AAAA///AvleUkxYAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
