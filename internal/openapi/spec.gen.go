// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.15.0 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
