// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
