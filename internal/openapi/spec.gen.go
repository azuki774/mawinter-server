// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
