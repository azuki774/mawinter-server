// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"W7tDR0OnZxJChrVjMB7/JwAA//9sERxR3hYAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
