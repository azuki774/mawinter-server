// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
