// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.15.0 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
