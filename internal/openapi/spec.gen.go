// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"4/8FAAD//+E5VyUQGQAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
