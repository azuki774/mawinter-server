// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
