// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
